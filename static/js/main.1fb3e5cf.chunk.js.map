{"version":3,"sources":["logo.svg","algorithms/algorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","getMergeSortAnimations","array","animations","length","auxArray","slice","mergeSortHelper","mainArray","start","end","middle","Math","floor","k","i","j","push","doMerge","getBubbleSortAnimations","console","log","n","temp","bubbleSort","getQuickSortAnimations","quickSortHelper","pivot","tempM","partition","getHeapSortAnimations","stateArray","currentIndex","siftDown","buildMaxHeap","swap","left","right","SortingVisualizer","props","state","document","title","this","resetArray","min","max","maxH","window","innerHeight","random","setState","arrayBars","getElementsByClassName","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","newHeightOne","newHeightTwo","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","onClick","Button","mergeSort","heapSort","quickSort","Container","fluid","map","value","idx","key","size","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1fb3e5cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxArray, animations);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortHelper(mainArray, start, end, auxArray, animations){\r\n    if(start === end) return;\r\n\r\n    const middle = Math.floor((start+end)/2);\r\n    mergeSortHelper(auxArray, start, middle, mainArray, animations);\r\n    mergeSortHelper(auxArray, middle+1, end, mainArray, animations);\r\n    doMerge(mainArray, start, middle, end, auxArray, animations);\r\n}\r\n\r\nfunction doMerge(mainArray, start, middle, end, auxArray, animations){\r\n    let k = start;\r\n    let i = start;\r\n    let j = middle + 1;\r\n    while(i <= middle && j <= end){\r\n        animations.push([i,j]);\r\n        animations.push([i,j]);\r\n\r\n        if(auxArray[i] <= auxArray[j]){\r\n            animations.push([k, auxArray[i]]);\r\n            mainArray[k++] = auxArray[i++];\r\n        } else {\r\n            animations.push([k, auxArray[j]]);\r\n            mainArray[k++] = auxArray[j++];\r\n        }\r\n    }\r\n\r\n    while(i <= middle){\r\n        animations.push([i,i]);\r\n        animations.push([i,i]);\r\n\r\n        animations.push([k, auxArray[i]]);\r\n        mainArray[k++] = auxArray[i++];\r\n    }\r\n\r\n    while (j <= end) {\r\n        animations.push([j, j]);\r\n        animations.push([j, j]);\r\n\r\n        animations.push([k, auxArray[j]]);\r\n        mainArray[k++] = auxArray[j++];\r\n    }\r\n}\r\n\r\n\r\nexport function getBubbleSortAnimations(array) {\r\n    const animations = [];\r\n    if(array.length <= 1) return array;\r\n    bubbleSort(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction bubbleSort(array, animations){\r\n    console.log(array);\r\n    const n = array.length;\r\n    for(let i=0;i<n;i++){\r\n        for(let j=0;j<n-i-1;j++){\r\n            animations.push([j, j + 1]);\r\n            animations.push([j, j + 1]);\r\n            if(array[j] >= array[j+1]){\r\n                animations.push([j, j + 1, array[j], array[j + 1]]);\r\n                var temp = array[j];\r\n                array[j] = array[j+1];\r\n                array[j+1] = temp;\r\n            }else{\r\n                animations.push([j,j,array[j],array[j]]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function getQuickSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    quickSortHelper(array, 0, array.length - 1, animations);\r\n    return animations;   \r\n}\r\n\r\nfunction quickSortHelper(array, start, end, animations) {\r\n    if(start < end){\r\n        var pivot = partition(array, start, end, animations);\r\n        quickSortHelper(array, start, pivot-1, animations);\r\n        quickSortHelper(array,pivot+1,end, animations);\r\n    }\r\n}\r\n\r\nfunction partition(array, start, end, animations) {\r\n    var pivot = array[end];\r\n    var i = start-1;\r\n\r\n    for(let j=start;j<end;j++){\r\n        animations.push([j,end]);\r\n        animations.push([j,end]);\r\n        if (array[j] < pivot){\r\n            i++;\r\n            animations.push([i,j,array[i],array[j]]);\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }else{\r\n            animations.push([j,j,array[j],array[j]]);\r\n        }\r\n    }\r\n    animations.push([i+1,end]);\r\n    animations.push([i+1, end]);\r\n    animations.push([i+1,end,array[i+1],array[end]]);\r\n    var tempM = array[i+1];\r\n    array[i+1] = array[end];\r\n    array[end] = tempM;\r\n\r\n    return i+1;\r\n}\r\n\r\n\r\nexport function getHeapSortAnimations(stateArray) {\r\n    let array = stateArray.slice(0),\r\n        animations = [];\r\n    buildMaxHeap(array, animations);\r\n    let end = array.length - 1;\r\n    while (end > 0) {\r\n        animations.push([0, end]);\r\n        animations.push([0, end]);\r\n        animations.push([0, end, array[0], array[end]]);\r\n        let temp = array[end];\r\n        array[end] = array[0];\r\n        array[0] = temp;\r\n        siftDown(array, 0, end, animations);\r\n        end--;\r\n    }\r\n    return animations;\r\n}\r\n\r\nfunction buildMaxHeap(array, animations) {\r\n    let currentIndex = Math.floor(array.length / 2);\r\n    while (currentIndex >= 0) {\r\n        siftDown(array, currentIndex, array.length, animations);\r\n        currentIndex--;\r\n    }\r\n}\r\n\r\nfunction siftDown(array, start, end, animations) {\r\n    if (start >= Math.floor(end / 2)) {\r\n        return;\r\n    }\r\n    let left = start * 2 + 1,\r\n        right = start * 2 + 2 < end ? start * 2 + 2 : null,\r\n        swap;\r\n    if (right) {\r\n        swap = array[left] > array[right] ? left : right;\r\n    } else {\r\n        swap = left;\r\n    }\r\n    if (array[start] < array[swap]) {\r\n        animations.push([start,swap]);\r\n        animations.push([start, swap]);\r\n        animations.push([start, swap, array[start], array[swap]]);\r\n        let temp = array[swap];\r\n        array[swap] = array[start];\r\n        array[start] = temp;\r\n        siftDown(array, swap, end, animations);\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport { getMergeSortAnimations, getBubbleSortAnimations, getQuickSortAnimations, getHeapSortAnimations} from '../algorithms/algorithms.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button, Navbar, Nav, Container} from 'react-bootstrap';\r\n\r\n\r\nconst ANIMATION_SPEED_MS = 5;\r\n\r\nconst NUMBER_OF_ARRAY_BARS = 50;\r\n\r\nconst PRIMARY_COLOR = 'turquoise';\r\n\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Sorting Visualizer\";\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n            var maxH = window.innerHeight*0.80;\r\n            array.push(randomIntFromInterval(5, maxH));\r\n        }\r\n        this.setState({ array });\r\n    }\r\n\r\n    mergeSort(){\r\n        const animations = getMergeSortAnimations(this.state.array);\r\n        for(let i=0;i<animations.length;i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange) {\r\n                const [barOneIndex, barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneIndex, newHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIndex].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                    console.log(animations[i]+\" \"+barOneStyle.height);\r\n                    \r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n\r\n    bubbleSort(){\r\n        const animations = getBubbleSortAnimations(this.state.array);\r\n        for(let i=0;i<animations.length;i++){\r\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange){\r\n                const [barOneIndex, barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            } \r\n            else {\r\n                setTimeout(() => {\r\n                    const [barOneIndex, barTwoIndex, newHeightOne, newHeightTwo] = animations[i]; \r\n                    arrayBars[barOneIndex].style.height = `${newHeightTwo}px`;\r\n                    arrayBars[barTwoIndex].style.height = `${newHeightOne}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n\r\n    heapSort(){\r\n        console.log(this.state.array);\r\n        const animations = getHeapSortAnimations(this.state.array);        \r\n        \r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIndex, barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    const [barOneIndex, barTwoIndex, newHeightOne, newHeightTwo] = animations[i];\r\n                    arrayBars[barOneIndex].style.height = `${newHeightTwo}px`;\r\n                    arrayBars[barTwoIndex].style.height = `${newHeightOne}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n\r\n    quickSort(){\r\n        // console.log(this.state.array);\r\n        const animations = getQuickSortAnimations(this.state.array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIndex, barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    const [barOneIndex, barTwoIndex, newHeightOne, newHeightTwo] = animations[i];\r\n                    arrayBars[barOneIndex].style.height = `${newHeightTwo}px`;\r\n                    arrayBars[barTwoIndex].style.height = `${newHeightOne}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { array } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">Sorting Visualizer</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link onClick={() => {this.bubbleSort()}}>\r\n                                <Button>Bubble Sort</Button>\r\n                            </Nav.Link>\r\n                            <Nav.Link onClick={() => {this.mergeSort()}}>\r\n                                <Button>Merge Sort</Button>\r\n                            </Nav.Link>\r\n                            <Nav.Link onClick={() => { this.heapSort() }}>\r\n                                <Button>Heap Sort</Button>\r\n                            </Nav.Link>\r\n                            <Nav.Link onClick={() => { this.quickSort() }}>\r\n                                <Button>Quick Sort</Button>\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Container fluid>\r\n                    <div className=\"array-container\">\r\n                        {array.map((value, idx) => (\r\n                            <div\r\n                                className=\"array-bar\"\r\n                                key={idx}\r\n                                style={{\r\n                                    backgroundColor: PRIMARY_COLOR,\r\n                                    height: `${value}px`,\r\n                                }}>\r\n                                </div>\r\n                        ))}\r\n                    </div>\r\n                </Container>\r\n                <Button className=\"fab\" variant=\"primary\" size=\"lg\" onClick={() => this.resetArray()}>Reset Array</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}